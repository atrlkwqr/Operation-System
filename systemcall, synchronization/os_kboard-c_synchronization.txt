#include <linux/syscalls.h>
#include <linux/printk.h>
#include <linux/uaccess.h>

#define MAX_CLIP 5

int ring[MAX_CLIP] = {-7777};

long ring_lp = 0;
long ring_cp = 0;
long ring_len = 0;
int count = 0;

void ring_push(int data){
        ring_len++;
        ring[ring_lp++] = data;
        if(ring_lp == MAX_CLIP) ring_lp = 0;
}

void ring_pop(void){
        ring_len--;
        ring_cp++;
        if(ring_cp == MAX_CLIP) ring_cp = 0;
}

long do_sys_kb_enqueue(int item){

        if(ring_len == 5) return 1;
        if(item < 0){
                printk(KERN_DEBUG "os201514768: do_sys_kb_enqueue() input negative!!\n");
                return -2;
        }
        ring_push(item);
        count++;
        return 0;
}

long do_sys_kb_dequeue(int *user_buf){

        if(ring_len == 0) return 1;
        copy_to_user(user_buf, &ring[ring_cp], sizeof(int));
        ring[ring_cp] = -7777;
        ring_pop();
        count++;
        return 0;
}

SYSCALL_DEFINE1(kb_enqueue, int, item){
        return do_sys_kb_enqueue(item);
}

SYSCALL_DEFINE1(kb_dequeue, int __user *, user_buf){
        return do_sys_kb_dequeue(user_buf);
}

